version: '2'
messages:
  $i18n: locales.yml
template:
  name:
    $ref: "#/messages/template.name"
  description:
    $ref: "#/messages/template.description"
  header: '![](toolchain.svg?localize)'
  icon: secure-lock-kubernetes.svg
  required:
    - build
    - repo
  info:
    git url: >-
      [https://github.com/jeongkm/hybrid-kube-toolchain](https://github.com/jeongkm/hybrid-kube-toolchain)
    git branch: >-
      [master](https://github.com/jeongkm/hybrid-kube-toolchain/tree/master)
toolchain:
  name: 'hybrid-toolchain-{{timestamp}}'
  template:
    getting_started:
      $ref: "#/messages/template.gettingStarted" 
services:
  repo:
    service_id: >
      $env.source_provider ? $env.source_provider : 'hostedgit'
    parameters:
      repo_name: 'hello-containers-{{timestamp}}'
      repo_url: >
        $env.type === 'link' ? 
          $env.app_repo : 'https://github.com/jeongkm/hello-containers'
      source_repo_url: >
        $env.type === 'fork' || $env.type === 'clone' ? 
          $env.app_repo : 'https://github.com/jeongkm/hello-containers'
      type: $env.type || 'clone'
      has_issues: true
      enable_traceability: true
  build:
    service_id: pipeline
    parameters:
      services:
        - repo
      name: '{{services.repo.parameters.repo_name}}'
      ui-pipeline: true
      configuration:
        content:
          $text: pipeline.yml
        env:
          GIT_REPO: repo
          APP_NAME: '{{form.pipeline.parameters.app-name}}'
          REGISTRY_REGION_ID: '{{form.pipeline.parameters.registry-region}}'
          REGISTRY_NAMESPACE: '{{form.pipeline.parameters.registry-namespace}}'
          API_KEY: '{{form.pipeline.parameters.api-key}}'
          STAGING_REGION_ID: '{{form.pipeline.parameters.staging-region}}'
          STAGING_RESOURCE_GROUP: '{{form.pipeline.parameters.staging-resource-group}}'
          STAGING_CLUSTER_NAME: '{{form.pipeline.parameters.staging-cluster-name}}'
          STAGING_CLUSTER_NAMESPACE: '{{form.pipeline.parameters.staging-cluster-namespace}}'
          PROD_KUBE_MASTER_ADDRESS: '{{form.pipeline.parameters.prod-kube-master-address}}'
          PROD_KUBER_MASTER_PORT: '{{form.pipeline.parameters.prod-kube-master-port}}'
          PROD_KUBE_SERVICE_ACCOUNT_NAME: '{{form.pipeline.parameters.prod-kube-service-account-name}}'
          PROD_KUBE_SERVICE_ACCOUNT_TOKEN: '{{form.pipeline.parameters.prod-kube-service-account-token}}'
          PROD_CLUSTER_NAMESPACE: '{{form.pipeline.parameters.prod-cluster-namespace}}'
        execute: true
  webide:
    service_id: orion
form:
  pipeline:
    parameters:
      app-name: '{{services.repo.parameters.repo_name}}'
      staging-cluster-namespace: staging
      prod-kube-master-port: '8001'
      prod-kube-service-account-name: default
      prod-cluster-namespace: prod
    schema:
      $ref: deploy.json
